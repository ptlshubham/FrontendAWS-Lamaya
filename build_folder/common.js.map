{"version":3,"sources":["./src/app/manage/Admin/customers/customerlist/customerlist.service.ts","./src/app/manage/Admin/orders/orders.service.ts","./src/app/manage/Admin/inventory/inventory.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiService } from 'app/api.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerListService {\n\n  constructor(\n    private http: Http,\n    private httpClient: HttpClient\n  ) { }\n\n  getCustomer(): Observable<[]>{\n     \n    return this.httpClient.get<any>(ApiService.getCustomerListURL);\n  }\n//   updateRating(): Observable<any>{\n//      \n//     return this.httpClient.post<any>(ApiService.updatereviewsURL, admin);\n//   }\n  removeRating(id){\n     \n    return this.httpClient.get<any>(ApiService.removeReviewsURL+id);\n\n  }\n\n}\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiService } from 'app/api.service';\nimport { Observable } from 'rxjs';\nimport { Userorders } from './orders.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  constructor(\n    private http: Http,\n    private httpClient: HttpClient\n  ) { }\n\n  saveStatus(admin: Userorders): Observable<any>{\n    return this.httpClient.post<any>(ApiService.updateOrdersStatusURL, admin);\n  }\n\n  getOrders(data): Observable<Userorders[]>{\n    \n    return this.httpClient.post<any>(ApiService.getOrdersListURL,data);\n  }\n  acceptOrder(id){\n    let data={\n      id:id\n    }\n    return this.httpClient.post<any>(ApiService.acceptUserOrderURL, data);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiService } from 'app/api.service';\nimport { Product } from 'app/manage/Admin/category/product.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryService {\n\n  constructor(\n    private http: Http,\n    private httpClient: HttpClient\n  ) { }\n  getProduct(): Observable<Product[]>{\n    return this.httpClient.get<any>(ApiService.getAdminProductListURL);\n  }\n  getSize(id){\n    let data={\n      id:id\n    }\n    return this.httpClient.post(ApiService.GetSizeListURL,data);\n\n  }\n  getFilterProduct(data){\n    return this.httpClient.post<any>(ApiService.GetFilterProductsURL,data)\n  }\n  removeProduct(id) {\n\n    return this.httpClient.get<any>(ApiService.removeProductListItemURL + id);\n  }\n  addToNewArrivals(data){\n    return this.httpClient.post(ApiService.addToNewArrivalsURL,data);\n\n  }\n  addToBestProduct(data){\n    return this.httpClient.post(ApiService.addToBestProductURL,data);\n\n  }\n  addTohotProduct(data){\n    return this.httpClient.post(ApiService.addToHotProductURL,data);\n\n  }\n  addToSale(data){\n    return this.httpClient.post(ApiService.addToOnSaleURL,data);\n\n  }\n}\n"],"sourceRoot":"webpack:///"}