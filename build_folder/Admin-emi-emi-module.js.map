{"version":3,"sources":["./src/app/manage/Admin/emi/emi.component.ts","./src/app/manage/Admin/emi/emi.module.ts","./src/app/manage/Admin/emi/emi.component.css","./src/app/manage/Admin/emi/emi.component.html","./src/app/manage/Admin/emi/emi.model.ts","./src/app/manage/Admin/emi/emi.service.ts"],"names":[],"mappings":"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","file":"Admin-emi-emi-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RateOfIntrest } from './bank.model';\nimport { Emi } from './emi.model';\nimport { EmiService } from './emi.service';\n\n@Component({\n  selector: 'app-emi',\n  templateUrl: './emi.component.html',\n  styleUrls: ['./emi.component.css']\n})\nexport class EmiComponent implements OnInit {\n  public EmiModel: Emi = new Emi;\n  addEmiFields: any = [];\n  val = 0;\n  public EMI: Emi[] = [];\n  public bank: Emi[] = [];\n  selectedBank: any;\n  public rateOfIntrest: RateOfIntrest[] = [];\n  public roi: RateOfIntrest[] = [];\n  bankid: any;\n  public isBankShow = true;\n  constructor(\n    private emiService: EmiService,\n\n  ) {\n    this.getBankList();\n    this.getROIList();\n  }\n  bankOpen() {\n    this.isBankShow = false;\n  }\n  ngOnInit(): void {\n    this.addEmiFields = [{ name: this.val }];\n    this.val++;\n  }\n  addEmiMonths() {\n    this.val++;\n    this.addEmiFields.push({ name: this.val });\n  }\n  removeEmiMonths(val) {\n    this.addEmiFields.splice(val, 1);\n  }\n  addBankList() {\n    this.emiService.saveBankList(this.EmiModel).subscribe((response) => {\n      console.log(response);\n    })\n  }\n  getBankList() {\n    this.emiService.getBankList().subscribe((data: any) => {\n      this.EMI = data;\n    });\n  }\n  selectBankList(id) {\n    this.bankid = id;\n    this.EMI.forEach(element => {\n      if (element.id == id) {\n        this.selectedBank = element.bankname;\n      }\n    })\n  }\n  saveROIntrest(data) {\n    this.addEmiFields.forEach(element => {\n      element.bankid = this.bankid\n    });\n    this.emiService.addEmiOption(this.addEmiFields).subscribe((data: any) => {\n      alert(\"succfull\");\n      this.getROIList();\n    })\n  }\n  getROIList() {\n    this.emiService.getRateOfIntrest().subscribe((data: any) => {\n      this.roi = data;\n    });\n  }\n  removeEmi(id){\n    this.emiService.removeROIList(id).subscribe((req) => {\n      this.getROIList();\n    })\n  }\n  closeAddBank(){\n    this.isBankShow=true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { EmiService } from './emi.service';\nimport { EmiComponent } from './emi.component';\n\n\n\n@NgModule({\n  declarations: [EmiComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([\n      {\n        path:'emi',\n        component:EmiComponent\n      }\n    ])\n  ],\n  providers: [\n    EmiService\n  ],\n})\nexport class EmiModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZS9BZG1pbi9lbWkvZW1pLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"card\\\"  *ngIf=\\\"!isBankShow\\\">\\n        <div class=\\\"card-header\\\">\\n            <h4 class=\\\"card-title\\\">Add Bank</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <form class=\\\"form-horizontal\\\" name=\\\"bankRegForm\\\" #bankRegForm=\\\"ngForm\\\">\\n                <div class=\\\"row\\\">\\n                    <label class=\\\"col-md-2 col-form-label\\\">Enter Bank Name</label>\\n                    <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bankname\\\" name=\\\"bankname\\\"\\n                                [(ngModel)]=\\\"EmiModel.bankname\\\" placeholder=\\\"Enter Bank Name\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"card-footer \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-10\\\"></div>\\n                <div class=\\\"col-md-1\\\">\\n                    <button type=\\\"cancel\\\" class=\\\"btn btn-round\\\" (click)=\\\"closeAddBank()\\\" >Cancel</button>\\n                </div>\\n                <div class=\\\"col-md-1\\\">\\n                    <button type=\\\"submit\\\" (click)=\\\"addBankList()\\\" class=\\\"btn btn-info btn-round\\\">Submit</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header \\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-10\\\">\\n                <h4 class=\\\"card-title\\\">Add EMI</h4></div>\\n                <div class=\\\"col-md-2\\\">\\n                    <button type=\\\"submit\\\"  class=\\\"btn btn-info btn-round\\\" *ngIf=\\\"isBankShow\\\" (click)=\\\"bankOpen()\\\">Add new bank</button>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <form class=\\\"form-horizontal\\\" name=\\\"ROIForm\\\" #ROIForm=\\\"ngForm\\\">\\n                <div class=\\\"row\\\">\\n                    <label class=\\\"col-sm-1 col-form-label\\\">Select Bank</label>\\n                    <div class=\\\"col-sm-3\\\">\\n                        <div class=\\\"dropdown form-group\\\">\\n                            <button class=\\\"dropdown-toggle btn btn-primary btn-round btn-block\\\" type=\\\"button\\\"\\n                                name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\n                                aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{selectedBank}}\\n\\n                            </button>\\n                            <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                                <div class=\\\"dropdown-header\\\">Select Bank</div>\\n                                <div *ngFor=\\\"let b of EMI\\\">\\n                                    <a class=\\\"dropdown-item\\\" (click)=\\\"selectBankList(b.id)\\\">{{b.bankname}}</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\" *ngFor=\\\"let add of addEmiFields;let ind=index\\\">\\n                    <div class=\\\"col-md-4\\\"></div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <p class=\\\"card-title\\\">EMI Month</p>\\n                        <div class=\\\"form-group\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"months\\\" name=\\\"months\\\" [(ngModel)]=\\\"add.months\\\"\\n                                placeholder=\\\" Enter Months\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-md-3\\\">\\n                        <p class=\\\"card-title\\\">Enter Rate Of Intrest</p>\\n                        <div class=\\\"form-group\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"intrest\\\" name=\\\"intrest\\\"\\n                                [(ngModel)]=\\\"add.intrest\\\" placeholder=\\\"Enter Rate Of Intrest\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"col-md-1\\\">\\n                        <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\" (click)=\\\"addEmiMonths()\\\"\\n                            style=\\\"font-size: 33px !important;margin-top:40%!important;\\\"></i>\\n                    </div>\\n                    <div class=\\\"col-md-1\\\" *ngIf=\\\"ind>0\\\">\\n                        <i class=\\\"fa fa-times-circle-o\\\" aria-hidden=\\\"true\\\" (click)=\\\"removeEmiMonths(ind)\\\"\\n                            style=\\\"font-size: 33px !important;margin-top:40%!important;margin-left: -80px !important;\\\"></i>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n            <div class=\\\"row\\\">\\n               <div class=\\\"col-md-11\\\"></div>\\n                <div class=\\\"col-md-1\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-info btn-round\\\" (click)=\\\"saveROIntrest(add)\\\">Submit</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <h4 class=\\\"card-title\\\">Bank with Rate Of Interest Table</h4>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table\\\">\\n                    <thead class=\\\"text-primary\\\">\\n                        <th class=\\\"text-center\\\">\\n                            #\\n                        </th>\\n                        <th class=\\\"text-center\\\">\\n                            Bank Name\\n                        </th>\\n                        <th class=\\\"text-center\\\">\\n                            EMI Month\\n                        </th>\\n                        <th class=\\\"text-center\\\">\\n                            Rate Of Interest\\n                        </th>\\n                        <!-- <th class=\\\"text-right\\\">\\n                            Salary\\n                        </th> -->\\n                        <th class=\\\"text-right\\\">\\n                            Actions\\n                        </th>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let r of roi;let i=index\\\">\\n                            <td class=\\\"text-center\\\">{{i+1}}</td>\\n                            <td class=\\\"text-center\\\">{{r.bankname}}</td>\\n                            <td class=\\\"text-center\\\">{{r.months}} Months</td>\\n                            <td class=\\\"text-center\\\">{{r.intrest}} %</td>\\n                            <td class=\\\"text-right\\\">\\n                                <!-- <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-success btn-icon btn-sm\\\">\\n                                    <i class=\\\"fa fa-edit\\\"></i>\\n                                </button> -->\\n                                <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-danger btn-icon btn-sm\\\" (click)=\\\"removeEmi(r.id)\\\">\\n                                    <i class=\\\"fa fa-times\\\"></i>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","export class Emi{\n    constructor(\n     \n        public id?:number,\n        public bankname?: string,\n  \n  \n     ) {\n    }\n}\n\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiService } from 'app/api.service';\nimport { Observable } from 'rxjs';\nimport { Emi } from './emi.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmiService {\n\n  constructor(\n    private http: Http,\n    private httpClient: HttpClient\n  ) { }\n  saveBankList(admin: Emi): Observable<any> {\n    return this.httpClient.post<any>(ApiService.saveBankListURL, admin);\n  }\n  getBankList(): Observable<Emi[]>{\n    return this.httpClient.get<any>(ApiService.getBankListURL);\n  }\n  addEmiOption(data){\n    return this.httpClient.post<any>(ApiService.saveEmioptionURL,data);\n  }\n  getRateOfIntrest(): Observable<Emi[]>{\n    return this.httpClient.get<any>(ApiService.getROIListURL);\n  }\n  removeROIList(id){\n    let data={\n      id:id\n    };\n    return this.httpClient.post<any>(ApiService.removeROIListURL,data);\n  }\n}"],"sourceRoot":"webpack:///"}