{"version":3,"sources":["./src/app/manage/Admin/banners/mobilehome/mobilehome.component.ts","./src/app/manage/Admin/banners/banners.routing.ts","./src/app/manage/Admin/banners/webhome/webhome.component.ts","./src/app/manage/Admin/banners/webhome/webhome.component.css","./src/app/manage/Admin/banners/banners.module.ts","./src/app/manage/Admin/banners/mobilehome/mobilehome.component.css","./src/app/manage/Admin/banners/webhome/webhome.component.html","./src/app/manage/Admin/banners/banners.service.ts","./src/app/manage/Admin/banners/mobilehome/mobilehome.component.html","./src/app/manage/Admin/banners/webhome/webhome.model.ts"],"names":[],"mappings":"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","file":"Admin-banners-banners-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { BannersService } from '../banners.service';\nimport { Webbanners } from '../webhome/webhome.model';\n\n@Component({\n  selector: 'app-mobilehome',\n  templateUrl: './mobilehome.component.html',\n  styleUrls: ['./mobilehome.component.css']\n})\nexport class MobilehomeComponent implements OnInit {\n  isAddShow = true;\n  isActive = false;\n  image: any;\n  positiion: any = []\n  selectedPosition: any;\n  public WebbannersModel: Webbanners = new Webbanners;\n  public webImage: Webbanners[] = [];\n  constructor(\n    private bannersServie: BannersService,\n  ) {\n    this.positiion = [\n      {\n        name: 'Top'\n      },\n      {\n        name: 'Middle',\n      },\n      {\n        name: 'End',\n      },\n      {\n        name: 'Offer'\n      }\n    ]\n    this.getBanners();\n  }\n\n  ngOnInit(): void {\n  }\n  addNewImages() {\n    this.isAddShow = false;\n  }\n  cancelAddImage() {\n    this.isAddShow = true;\n  }\n  selectPosition(name) {\n    this.positiion.forEach(element => {\n      if (element.name == name) {\n        this.selectedPosition = element.name;\n      }\n    })\n\n  }\n  select(event) {\n     \n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n\n      const formdata = new FormData();\n      formdata.append('file', file);\n\n       \n      this.bannersServie.uploadMobileBannersImage(formdata).subscribe((response) => {\n        this.image = response;\n        console.log(response);\n      })\n\n    }\n  }\n  saveBannersImage() {\n     \n    this.WebbannersModel.bannersimage = this.image;\n    this.WebbannersModel.name = this.selectedPosition;\n    this.WebbannersModel.status = true;\n    this.bannersServie.saveMobileBannersImage(this.WebbannersModel).subscribe(response => {\n      this.isAddShow = true;\n      this.getBanners();\n    })\n  }\n  getBanners() {\n    this.bannersServie.getMobileBanners().subscribe((data: any) => {\n      this.webImage = data;\n    });\n\n  }\n  removeBannersImage(id) {\n     \n    this.bannersServie.removeMobileBanners(id).subscribe((req) => {\n      this.getBanners();\n    })\n  }\n  activeBanners(id){\n    this.webImage[id].status =true;\n    this.bannersServie.activeDeavctiveBanners( this.webImage[id]).subscribe((req)=>{\n\n    })\n  }\n  deactiveBanners(id){\n    this.webImage[id].status =false;\n    this.bannersServie.activeDeavctiveBanners( this.webImage[id]).subscribe((req)=>{\n\n    })\n  }\n}","import { Routes } from \"@angular/router\";\nimport { MobilehomeComponent } from \"./mobilehome/mobilehome.component\";\nimport { WebhomeComponent } from \"./webhome/webhome.component\";\n\n\nexport const BannersRoutes: Routes = [{\n    path: '',\n    children: [{\n        path: 'mobilehome',\n        component: MobilehomeComponent\n    }]\n}, {\n    path: '',\n    children: [{\n        path: 'webhome',\n        component: WebhomeComponent\n    }]\n},\n\n];\n","import { Component, OnInit } from '@angular/core';\nimport { BannersService } from '../banners.service';\nimport { Webbanners } from './webhome.model';\n\n@Component({\n  selector: 'app-webhome',\n  templateUrl: './webhome.component.html',\n  styleUrls: ['./webhome.component.css']\n})\nexport class WebhomeComponent implements OnInit {\n  isAddShow = true;\n  image: any;\n  positiion: any = []\n  selectedPosition: any;\n\n  imageError: string;\n  isImageSaved: boolean = true;\n  cardImageBase64: string;\n\n\n  public WebbannersModel: Webbanners = new Webbanners;\n  public webImage: Webbanners[] = [];\n  constructor(\n    private bannersServie: BannersService,\n  ) {\n    this.positiion = [\n      {\n        name: 'Top'\n      },\n      {\n        name: 'Middle',\n      },\n      {\n        name: 'End',\n      },\n      {\n        name: 'Deal of the Day',\n      },\n      {\n        name: 'Deal of the Day Center',\n      }\n    ]\n    this.getBanners();\n  }\n\n  ngOnInit(): void {\n  }\n  addNewImages() {\n    this.isAddShow = false;\n  }\n  cancelAddImage() {\n    this.isAddShow = true;\n  }\n  selectPosition(name) {\n    this.positiion.forEach(element => {\n      if (element.name == name) {\n        this.selectedPosition = element.name;\n      }\n    })\n\n  }\n  select(event) {\n     \n    let max_height;\n    let max_width;\n    if (event.target.files && event.target.files[0]) {\n      const file = event.target.files[0];\n      // Size Filter Bytes\n      const max_size = 20971520;\n      const allowed_types = ['image/png', 'image/jpeg'];\n      if (this.selectedPosition == 'Top') {\n        max_height = 400;\n        max_width = 1200;\n      }\n      else if (this.selectedPosition == 'Middle') {\n        max_height = 400;\n        max_width = 1200;\n      }\n      else if (this.selectedPosition == 'End') {\n        max_height = 400;\n        max_width = 1200;\n      }\n      else if (this.selectedPosition == 'Deal of the Day') {\n        max_height = 800;\n        max_width = 600;\n      }\n      else if (this.selectedPosition == 'Deal of the Day Center'){\n        max_height = 570;\n        max_width = 390;\n      }\n\n\n      if (event.target.files[0].size > max_size) {\n        this.imageError =\n          'Maximum size allowed is ' + max_size / 1000 + 'Mb';\n\n        return false;\n      }\n\n      // if (!_.includes(allowed_types, event.target.files[0].type)) {\n      //     this.imageError = 'Only Images are allowed ( JPG | PNG )';\n      //     return false;\n      // }\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        const image = new Image();\n        image.src = e.target.result;\n        image.onload = rs => {\n          const img_height = rs.currentTarget['height'];\n          const img_width = rs.currentTarget['width'];\n          console.log(img_height, img_width);\n          if (img_height > max_height && img_width > max_width) {\n            alert(\"image must be \" + max_height + \"*\" + max_width);\n            this.isImageSaved = false;\n            this.imageError =\n              'Maximum dimentions allowed ' +\n              max_height +\n              '*' +\n              max_width +\n              'px';\n\n\n            return false;\n          } else {\n            const imgBase64Path = e.target.result;\n            this.cardImageBase64 = imgBase64Path;\n\n            const formdata = new FormData();\n            formdata.append('file', file);\n\n             \n            this.bannersServie.uploadImage(formdata).subscribe((response) => {\n              this.image = response;\n              console.log(response);\n              this.isImageSaved = true;\n\n\n            })\n            // this.previewImagePath = imgBase64Path;\n          }\n        };\n      };\n\n      reader.readAsDataURL(event.target.files[0]);\n    }\n\n\n\n\n  }\n  saveBannersImage() {\n     \n    this.WebbannersModel.bannersimage = this.image;\n    this.WebbannersModel.name = this.selectedPosition;\n    this.WebbannersModel.status = true;\n    this.bannersServie.saveWebBannersImage(this.WebbannersModel).subscribe(response => {\n      this.getBanners();\n      this.isAddShow = true;\n    })\n  }\n  getBanners() {\n     \n    this.bannersServie.getWebBanners().subscribe((data: any) => {\n      this.webImage = data;\n    });\n\n  }\n  removeBannersImage(id) {\n     \n    this.bannersServie.removeWebBanners(id).subscribe((req) => {\n      this.getBanners();\n    })\n  }\n  activeBanners(id) {\n    this.webImage[id].status = true;\n    this.bannersServie.activeDeavctiveWebBanners(this.webImage[id]).subscribe((req) => {\n\n    })\n  }\n  deactiveBanners(id) {\n    this.webImage[id].status = false;\n    this.bannersServie.activeDeavctiveWebBanners(this.webImage[id]).subscribe((req) => {\n\n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZS9BZG1pbi9iYW5uZXJzL3dlYmhvbWUvd2ViaG9tZS5jb21wb25lbnQuY3NzIn0= */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WebhomeComponent } from './webhome/webhome.component';\nimport { MobilehomeComponent } from './mobilehome/mobilehome.component';\nimport { BannersRoutes } from './banners.routing';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { BannersService } from './banners.service';\n\n\n\n@NgModule({\n  declarations: [WebhomeComponent, MobilehomeComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule,\n    RouterModule.forChild(BannersRoutes),\n  ],\n  providers: [\n    BannersService\n  ],\n})\nexport class BannersModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hbmFnZS9BZG1pbi9iYW5uZXJzL21vYmlsZWhvbWUvbW9iaWxlaG9tZS5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"card\\\" *ngIf=\\\"!isAddShow\\\">\\n        <div class=\\\"card-header\\\">\\n            <h4 class=\\\"card-title\\\">Add New Images</h4>\\n\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"card-body \\\">\\n                <form class=\\\"form-horizontal\\\" name=\\\"productRegForm\\\" #productRegForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"row\\\">\\n                        <label class=\\\"col-md-2 col-form-label\\\">Select Position</label>\\n                        <div class=\\\"col-md-2\\\">\\n                            <div class=\\\"dropdown form-group\\\">\\n                                <button class=\\\"dropdown-toggle btn btn-primary btn-round btn-block\\\" type=\\\"button\\\"\\n                                    name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\n                                    aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{selectedPosition}}\\n\\n                                </button>\\n                                <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                                    <div class=\\\"dropdown-header\\\">Select Position</div>\\n                                    <div *ngFor=\\\"let pos of positiion\\\">\\n                                        <a class=\\\"dropdown-item\\\" (click)=\\\"selectPosition(pos.name)\\\">{{pos.name}}</a>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <label class=\\\"col-md-2 col-form-label\\\">Select Image</label>\\n                        <div class=\\\"col-md-3\\\">\\n                            <div class=\\\"fileinput fileinput-new text-center\\\" data-provides=\\\"fileinput\\\">\\n                                <div class=\\\"fileinput-new thumbnail\\\">\\n                                    <img src=\\\"./assets/manage/assets/img/image_placeholder.jpg\\\" alt=\\\"...\\\">\\n                                </div>\\n                                <div class=\\\"fileinput-preview fileinput-exists thumbnail\\\"></div>\\n                                <div>\\n                                    <span class=\\\"btn btn-rose btn-round btn-file\\\">\\n                                        <span class=\\\"fileinput-new\\\">Select Image</span>\\n                                        <span class=\\\"fileinput-exists\\\">Change</span>\\n                                        <input type=\\\"file\\\" id=\\\"BannersImage\\\" name=\\\"BannersImage\\\"\\n                                            (change)=\\\"select($event)\\\" />\\n                                    </span>\\n                                    <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-danger btn-round fileinput-exists\\\"\\n                                        data-dismiss=\\\"fileinput\\\"><i class=\\\"fa fa-times\\\"></i> Remove</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-9\\\"></div>\\n                    <div class=\\\"col-md-1\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-info btn-round\\\" [disabled]=\\\"!productRegForm.form.valid\\\"\\n                            id=\\\"product-submit\\\" (click)=\\\"saveBannersImage()\\\">Submit</button> &nbsp;\\n                     \\n                    </div>\\n                    <div class=\\\"col-md-1\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-info btn-round\\\" (click)=\\\"cancelAddImage()\\\">Cancel</button>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\" *ngIf=\\\"isAddShow\\\">\\n        <div class=\\\"card-header\\\">\\n            <h4 class=\\\"card-title\\\">Banners List</h4>\\n            <div class=\\\"col-md-2 ml-auto\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-info btn-round\\\" (click)=\\\"addNewImages()\\\">Add New</button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table table-shopping\\\">\\n                        <thead class=\\\"\\\">\\n                            <tr>\\n                                <th></th>\\n                                <th>#</th>\\n                                <th>\\n                                    Images List\\n                                </th>\\n                                <th>\\n                                    Position\\n                                </th>\\n                                <th class=\\\"text-center\\\">Image</th>\\n                                <th>Status</th>\\n                                <th class=\\\"text-right\\\">\\n                                    Action\\n                                </th>\\n\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let web of webImage;let i=index\\\">\\n                                <td></td>\\n                                <td>{{i+1}}</td>\\n                                <td>Slider</td>\\n                                <td>\\n                                    {{web.name}}\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <div class=\\\"img-container\\\">\\n                                        <img src=\\\"http://localhost:8090{{web.bannersimage}}\\\">\\n                                    </div>\\n                                </td>\\n                                <td>\\n                                    <button class=\\\"btn btn-success\\\" *ngIf=\\\"web.status\\\"\\n                                        (click)=\\\"deactiveBanners(i)\\\">Active</button>\\n                                    <button class=\\\"btn btn-danger\\\" *ngIf=!web.status\\n                                        (click)=\\\"activeBanners(i)\\\">Deactive</button>\\n                                </td>\\n                                <td class=\\\"text-right\\\">\\n                                    <!-- <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-success btn-icon btn-sm\\\"\\n                                        data-toggle=\\\"modal\\\" data-target=\\\"#noticeModal\\\">\\n                                        <i class=\\\"fa fa-edit\\\"></i>\\n                                    </button> -->\\n                                    <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-danger btn-icon btn-sm \\\"\\n                                        (click)=\\\"removeBannersImage(web.id)\\\">\\n                                        <i class=\\\"fa fa-times\\\"></i>\\n                                    </button>\\n                                </td>\\n                            </tr>\\n\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\";","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { ApiService } from 'app/api.service';\nimport { Observable } from 'rxjs';\nimport { Webbanners } from './webhome/webhome.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BannersService {\n\n  constructor(\n    private http: Http,\n    private httpClient: HttpClient\n  ) { }\n  \n  uploadImage(img): Observable<any>{\n     \n    return this.httpClient.post<any>(ApiService.uploadBannersImageURL, img);\n\n  }\n  saveWebBannersImage(admin: Webbanners): Observable<any> {\n     \n    return this.httpClient.post<any>(ApiService.saveWebBannersURL, admin);\n  }\n  getWebBanners(): Observable<Webbanners[]>{\n    return this.httpClient.get<any>(ApiService.getWebBannersURL);\n  }\n  removeWebBanners(id){\n    let bnr={\n      id:id\n    }\n    return this.httpClient.post<any>(ApiService.removeWebBannersURL,bnr);\n  }\n  saveMobileBannersImage(admin: Webbanners): Observable<any>{\n     \n    return this.httpClient.post<any>(ApiService.saveMobileBannersURL, admin);\n  }\n  getMobileBanners(): Observable<Webbanners[]>{\n    return this.httpClient.get<any>(ApiService.getMobileBannersURL);\n  }\n  removeMobileBanners(id){\n     \n    let bnr={\n      id:id\n    }\n    return this.httpClient.post<any>(ApiService.removeMobileBannersURL,bnr);\n  }\n  uploadMobileBannersImage(img): Observable<any>{\n     \n    return this.httpClient.post<any>(ApiService.uploadMobileImageURL, img);\n\n  }\n  activeDeavctiveBanners(admin: Webbanners): Observable<any> {\n     \n    return this.httpClient.post<any>(ApiService.updateActiveStatusURL, admin);\n  }\n  activeDeavctiveWebBanners(admin: Webbanners): Observable<any> {\n     \n    return this.httpClient.post<any>(ApiService.updateActiveWebStatusURL, admin);\n  }\n}\n\n\n","export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"card\\\" *ngIf=\\\"!isAddShow\\\">\\n        <div class=\\\"card-header\\\">\\n            <h4 class=\\\"card-title\\\">Add New Images</h4>\\n\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"card-body \\\">\\n                <form class=\\\"form-horizontal\\\" name=\\\"productRegForm\\\" #productRegForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"row\\\">\\n                        <label class=\\\"col-md-2 col-form-label\\\">Select Position</label>\\n                        <div class=\\\"col-md-2\\\">\\n                            <div class=\\\"dropdown form-group\\\">\\n                                <button class=\\\"dropdown-toggle btn btn-primary btn-round btn-block\\\" type=\\\"button\\\"\\n                                    name=\\\"dropdownMenuButton\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\"\\n                                    aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">{{selectedPosition}}\\n\\n                                </button>\\n                                <div class=\\\"dropdown-menu dropdown-menu-right\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n                                    <div class=\\\"dropdown-header\\\">Select Position</div>\\n                                    <div *ngFor=\\\"let pos of positiion\\\">\\n                                        <a class=\\\"dropdown-item\\\" (click)=\\\"selectPosition(pos.name)\\\">{{pos.name}}</a>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <label class=\\\"col-md-2 col-form-label\\\">Select Image</label>\\n                        <div class=\\\"col-md-3\\\">\\n                            <div class=\\\"fileinput fileinput-new text-center\\\" data-provides=\\\"fileinput\\\">\\n                                <div class=\\\"fileinput-new thumbnail\\\">\\n                                    <img src=\\\"./assets/manage/assets/img/image_placeholder.jpg\\\" alt=\\\"...\\\">\\n                                </div>\\n                                <div class=\\\"fileinput-preview fileinput-exists thumbnail\\\"></div>\\n                                <div>\\n                                    <span class=\\\"btn btn-rose btn-round btn-file\\\">\\n                                        <span class=\\\"fileinput-new\\\">Select Image</span>\\n                                        <span class=\\\"fileinput-exists\\\">Change</span>\\n                                        <input type=\\\"file\\\" id=\\\"BannersImage\\\" name=\\\"BannersImage\\\"\\n                                            (change)=\\\"select($event)\\\" />\\n                                    </span>\\n                                    <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-danger btn-round fileinput-exists\\\"\\n                                        data-dismiss=\\\"fileinput\\\"><i class=\\\"fa fa-times\\\"></i> Remove</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n                <div class=\\\"row\\\">\\n\\n                    <div class=\\\"col-md-3 ml-auto\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-info btn-round\\\" [disabled]=\\\"!productRegForm.form.valid\\\"\\n                            id=\\\"product-submit\\\" (click)=\\\"saveBannersImage()\\\">Submit</button> &nbsp;\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-info btn-round\\\" (click)=\\\"cancelAddImage()\\\">Cancel</button>\\n                    </div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"card\\\" *ngIf=\\\"isAddShow\\\">\\n        <div class=\\\"card-header\\\">\\n            <h4 class=\\\"card-title\\\">Banners List</h4>\\n            <div class=\\\"col-md-2 ml-auto\\\">\\n                <button type=\\\"submit\\\" style=\\\"margin-top: -75px;\\\" class=\\\"btn btn-info btn-round\\\"\\n                    (click)=\\\"addNewImages()\\\">Add New</button>\\n            </div>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table table-shopping\\\">\\n                        <thead class=\\\"\\\">\\n                            <tr>\\n                                <th></th>\\n                                <th>#</th>\\n                                <th>\\n                                    Images List\\n                                </th>\\n                                <th>\\n                                    Position\\n                                </th>\\n                                <th class=\\\"text-center\\\">Image</th>\\n                                <th>Status</th>\\n                                <th class=\\\"text-right\\\">\\n                                    Action\\n                                </th>\\n\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor=\\\"let web of webImage;let i=index\\\">\\n                                <td></td>\\n                                <td>{{i+1}}</td>\\n                                <td>Slider</td>\\n                                <td>\\n                                    {{web.name}}\\n                                </td>\\n                                <td class=\\\"text-center\\\">\\n                                    <div class=\\\"img-container\\\">\\n                                        <img src=\\\"http://localhost:8090{{web.bannersimage}}\\\">\\n                                    </div>\\n                                </td>\\n                                <td>\\n                                    <button class=\\\"btn btn-success\\\" *ngIf=\\\"web.status\\\" (click)=\\\"deactiveBanners(i)\\\">Active</button>\\n                                    <button class=\\\"btn btn-danger\\\" *ngIf=!web.status (click)=\\\"activeBanners(i)\\\">Deactive</button>\\n                                </td>\\n                                <td class=\\\"text-right\\\">\\n                                    <!-- <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-success btn-icon btn-sm\\\"\\n                                        data-toggle=\\\"modal\\\" data-target=\\\"#noticeModal\\\">\\n                                        <i class=\\\"fa fa-edit\\\"></i>\\n                                    </button> -->\\n                                    <button type=\\\"button\\\" rel=\\\"tooltip\\\" class=\\\"btn btn-danger btn-icon btn-sm \\\"\\n                                        (click)=\\\"removeBannersImage(web.id)\\\">\\n                                        <i class=\\\"fa fa-times\\\"></i>\\n                                    </button>\\n                                </td>\\n                            </tr>\\n\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\";","export class Webbanners{\n    constructor(\n        public id ?: number,\n        public name ?:string,\n        public bannersimage?:string,\n        public status?:boolean\n        \n     ) {\n    }\n}"],"sourceRoot":"webpack:///"}